name: Build and Analyze Qt Project

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install MSYS2 and Qt
      - name: Install MSYS2 and Qt
        run: |
          choco install msys2 --confirm
          C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm && pacman -S --noconfirm mingw-w64-x86_64-qt6-base"

      # Add Qt tools and libraries to PATH
      - name: Add MSYS2 and Qt to PATH
        run: |
          echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
          echo "C:/msys64/mingw64/share/qt6/bin" >> $GITHUB_PATH

      # Verify presence of UI file
      - name: Verify UI file
        run: |
          if not exist src/windows/AdminWindow.ui (
            echo "Error: AdminWindow.ui not found."
            exit 1
          )

      # Run qmake6
      - name: Run qmake6
        run: C:/msys64/mingw64/bin/qmake6 cproject.pro

      # Install SonarCloud tools
      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v3

      # Configure and build the project with build-wrapper
      - name: Configure and build the project
        run: |
          build-wrapper-win-x86-64 --out-dir build_wrapper_output_directory make

      # Run SonarCloud analysis
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output=build_wrapper_output_directory \
            --define sonar.projectKey=YOUR_PROJECT_KEY \
            --define sonar.organization=YOUR_ORGANIZATION_NAME \
            --define sonar.host.url=https://sonarcloud.io



